#encoding= utf-8
class Solution:
    # array 二维列表
        def Find(self, target, array):
                print array
                # write code here
                if not array:
                    return False
                if len(array[0])==1 and len(array)==1:
                    if array[0][0]== target:
                        return True
                    else:
                        return False
                lie = len(array[0])
                hang = len(array)
                if lie<1:
                    return False
                if array[0][0] >target or array[-1][-1] <target:
                    return False
                i,j = 0,0
                print hang,lie
                while i < hang and j<lie:
                    if array[i][j] < target:
                        i = i+1
                        if i ==hang:
                            i = i-1
                        j = j+1
                        if j == lie:
                            j = j-1
                    else:
                        break
                #表示其中一个已经耗尽
                print i,j
                print '-----------------',array[i][j]
                if array[i][j] == target:
                    return True
                if array[i][j]<target:
                    if i ==lie-1:
                        b = [ c[:] for c in array[j:]]
                    if j == hang-1:
                        b = [ c[j:] for c in array ]
                    result = self.Find(target,b)
                    return result
                if array[i][j]>target:
                    s1 = [ c[j:] for c in array[:i]]
                    s2 = [ d[:j] for d in array[i:]]
                    print s1
                    print s2
                    result = self.Find(target,s1) or self.Find(target,s2)
                    return result
if __name__ == "__main__":
    abc = [[1, 5, 7, 9, 10], [2, 6, 7, 11, 17], [6, 7, 8, 9, 12, 19], [7, 9, 10, 15, 20]]
    abc = [[2,4,5,8,9,12,15,18,19,21],[5,7,8,10,13,16,18,20,21,24],[7,9,11,12,14,19,22,24,25,28],[8,10,14,17,19,22,23,27,30,32],[10,12,16,20,22,25,27,30,32,35],[11,13,17,23,25,28,31,32,35,38],[13,16,18,24,27,30,34,36,39,40],[14,19,22,26,30,32,37,39,42,45],[15,21,25,29,33,34,40,43,44,47],[16,23,27,32,35,37,43,45,47,50]]
    abc = [[2,5,6,7,10,11,13,15,17,19,22,25,28,30,33,36,38,41,42,43],[4,8,10,13,14,15,18,19,20,22,25,28,31,33,35,38,40,42,45,46],[6,10,13,15,17,20,21,23,24,27,30,33,36,38,40,42,44,46,48,49],[7,12,15,17,19,22,23,25,28,30,33,35,37,41,44,46,47,49,50,53],[9,15,18,19,22,23,26,27,31,33,36,38,41,42,47,48,50,52,53,56],[10,18,21,22,25,26,29,30,33,36,38,40,44,45,49,50,52,54,57,60],[13,19,24,25,28,29,32,33,35,38,41,44,46,49,51,54,56,59,61,64],[14,22,26,28,29,32,35,37,39,40,43,45,49,52,54,56,59,60,64,67],[15,24,27,30,32,34,37,40,42,44,47,50,53,55,57,58,62,63,66,69],[18,25,28,33,34,37,39,42,45,47,50,53,55,57,59,61,64,67,69,71],[20,28,31,35,37,39,41,45,47,50,53,56,59,62,65,67,69,72,74,76],[23,31,33,37,40,43,46,49,50,53,55,59,62,64,66,68,72,74,77,79],[24,32,36,39,42,44,47,51,52,54,57,60,64,67,70,71,74,77,80,83],[25,34,39,42,45,47,50,52,55,57,60,62,66,69,71,73,75,79,83,84],[26,35,42,45,48,50,52,54,57,60,62,63,67,70,73,74,77,80,85,86],[27,38,45,46,50,52,55,57,58,63,65,68,70,73,75,78,79,83,86,88],[30,39,46,49,52,55,57,60,63,66,67,71,74,76,79,81,83,86,88,90],[33,41,49,52,54,56,60,62,64,67,68,74,77,79,82,85,87,89,91,93],[35,43,52,53,57,59,61,63,66,70,71,75,80,82,83,88,89,92,95,97],[37,45,54,57,60,61,64,67,70,73,75,77,82,84,87,89,91,94,98,99]] 
    s = Solution()
    print s.Find(16,abc)

                
